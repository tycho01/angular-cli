.<%= dasherizedModuleName %>(*ngIf='<%= camelizedModuleName %>')
  md-card
    //- a([routerLink]="['/invoices/' + item.invoice_id + '/items/' + item.id]")
    a([routerLink]="['/<%= dasherizedModuleName %>s/' + <%= camelizedModuleName %>.id]")
      md-card-title
        | serialize.<%= camelizedModuleName %>(<%= camelizedModuleName %>)
    md-card-content
      form
        - for ['name','phone','address']
        input(mdInput
          type='text'
          placeholder='{{tr.name()}}' 
          mdSuffix='%&nbsp;'
          '[(ngModel)]'='<%= camelizedModuleName %>.name'
          '[ngModelOptions]'='{standalone: true}'
          '(ngModelChange)'='update(<%= camelizedModuleName %>)'
        )
      form.dialog
        select(
          *ngIf='customers | async'
          '[(ngModel)]'=`invoice.customer_id`
          '[ngModelOptions]'='{standalone: true}'
          '(ngModelChange)'='update(<%= camelizedModuleName %>)'
        )
          option(
            *ngFor='let customer of customers | async'
            '[value]'='customer.id'
          )
            | {{customer.name}}
        span
          button(md-mini-fab (click)='openDialog()')
            md-icon.md-18
              | add
    md-divider
    md-card-content
      p
        | {{tr.revenue()}} : {{item.revenue}}
    md-card-content(*ngFor='let item of invoice.items')
      //- invoice-item-detail([item]='item')
    md-divider
    md-card-actions
      button(md-raised-button color='primary' (click)='create_item()') {{tr.addItem() }}
      //- button(md-raised-button color='accent' [routerLink]="['/<%= dasherizedModuleName %>s/' + <%= camelizedModuleName %>.id + '/edit']") Edit
      button(md-raised-button color='warn' (click)='remove(<%= camelizedModuleName %>)') {{tr.delete()}}
      //- openConfirm
